---
openapi: 3.0.3
info:
  title: My Project
  version: 10.5.36
servers:
  - url: ""
tags:
  - name: AccountJaxrsController
paths:
  /api/account/delete/{id}:
    delete:
      tags:
        - AccountJaxrsController
      operationId: AccountJaxrsController.deleteAccount
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: successful operation
      x-operation-name: deleteAccount
  /api/account/update:
    put:
      tags:
        - AccountJaxrsController
      operationId: AccountJaxrsController.updateAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountDto'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDto'
      x-operation-name: updateAccount
  /api/account/user-dtos:
    post:
      tags:
        - AccountJaxrsController
      operationId: AccountJaxrsController.getAccountDtosByQueryParam
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountDto'
      x-operation-name: getAccountDtosByQueryParam
  /api/account/user-dtos/{id}:
    get:
      tags:
        - AccountJaxrsController
      operationId: AccountJaxrsController.getAccountDtos
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountDto'
      x-operation-name: getAccountDtos
components:
  schemas:
    AccountDto:
      required:
        - login
        - firstName
        - lastName
        - email
        - activated
        - langKey
        - authorities
      type: object
      properties:
        login:
          type: string
          minLength: 1
          maxLength: 50
        firstName:
          type: string
          minLength: 0
          maxLength: 50
        lastName:
          type: string
          minLength: 0
          maxLength: 50
        email:
          type: string
          minLength: 5
          maxLength: 254
        imageUrl:
          type: string
          minLength: 0
          maxLength: 256
        activated:
          type: boolean
        langKey:
          type: string
          minLength: 2
          maxLength: 10
        authorities:
          type: array
          items:
            $ref: '#/components/schemas/Authority'
          uniqueItems: true
    Authority:
      type: string
      enum:
        - READ_USER
        - WRITE_USER
        - ACCES_APP
