---
openapi: 3.0.3
info:
  title: My Project
  version: 10.5.36
servers:
  - url: ""
tags:
  - name: AccountController
paths:
  /api/account:
    get:
      tags:
        - AccountController
      operationId: getAccount
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDto'
    post:
      tags:
        - AccountController
      operationId: saveAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountDto'
      responses:
        200:
          description: successful operation
  /api/account/activate:
    get:
      tags:
        - AccountController
      operationId: activateAccount
      parameters:
        - name: key
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: successful operation
  /api/account/register:
    post:
      tags:
        - AccountController
      operationId: registerAccount
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ManagedUserDto'
      responses:
        201:
          description: successful operation
components:
  schemas:
    AccountDto:
      required:
        - login
        - firstName
        - lastName
        - email
        - activated
        - langKey
        - authorities
      type: object
      properties:
        login:
          type: string
          minLength: 1
          maxLength: 50
        firstName:
          type: string
          minLength: 0
          maxLength: 50
        lastName:
          type: string
          minLength: 0
          maxLength: 50
        email:
          type: string
          minLength: 5
          maxLength: 254
        imageUrl:
          type: string
          minLength: 0
          maxLength: 256
        activated:
          type: boolean
        langKey:
          type: string
          minLength: 2
          maxLength: 10
        authorities:
          type: array
          items:
            $ref: '#/components/schemas/Authority'
          uniqueItems: true
    Authority:
      type: string
      enum:
        - READ_USER
        - WRITE_USER
        - ACCES_APP
    ManagedUserDto:
      required:
        - login
      type: object
      properties:
        id:
          type: integer
          format: int64
        login:
          type: string
          minLength: 1
          maxLength: 50
        firstName:
          type: string
          minLength: 0
          maxLength: 50
        lastName:
          type: string
          minLength: 0
          maxLength: 50
        email:
          type: string
          minLength: 5
          maxLength: 254
        imageUrl:
          type: string
          minLength: 0
          maxLength: 256
        activated:
          type: boolean
        langKey:
          type: string
          minLength: 2
          maxLength: 10
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        authorities:
          type: array
          items:
            type: string
          uniqueItems: true
        password:
          type: string
          minLength: 4
          maxLength: 100
