---
openapi: 3.0.3
info:
  title: This is a title
  description: This is a sample server.
  termsOfService: http://example.com/terms/
  contact:
    email: support@example.com
    name: API Support
    url: http://www.example.com/support
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 23.5.2
servers:
  - description: Development server
    url: https://development.gigantic-server.com/v1
  - description: Production server
    url: https://prod.gigantic-server.com/v1
tags:
  - name: UserController
    description: User controller interface
paths:
  /my-prefix/api/user/update:
    put:
      tags:
        - UserController
      operationId: updateUser
      description: Update a user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
        description: the user and his updated data
      responses:
        200:
          description: the updated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
  /my-prefix/api/user/user-dtos:
    get:
      tags:
        - UserController
      operationId: getUserDtos
      description: Get a list of all the users of the application
      responses:
        200:
          description: a list of all the users of the application
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDto'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
components:
  schemas:
    Authority:
      description: |
        Permissions of a user
          * `ACCESS_APP` - Has the right to access the application
          * `READ_USER` - Can read user informations
          * `UPDATE_USER` - Can update user informations
      type: integer
      enum:
        - 1000
        - 2000
        - 3000
      x-enumNames:
        - ACCESS_APP
        - READ_USER
        - UPDATE_USER
    UserDto:
      description: "A DTO representing a user, with his authorities."
      type: object
      properties:
        id:
          description: Id of the user
          type: integer
          format: int64
        login:
          description: The login of the user
          type: string
          minLength: 1
          maxLength: 50
        firstName:
          type: string
          minLength: 0
          maxLength: 50
        lastName:
          type: string
          minLength: 0
          maxLength: 50
        email:
          type: string
          minLength: 5
          maxLength: 254
        imageUrl:
          type: string
          minLength: 0
          maxLength: 256
        activated:
          type: boolean
        langKey:
          type: string
          minLength: 2
          maxLength: 10
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        authorities:
          type: array
          items:
            $ref: '#/components/schemas/Authority'
          uniqueItems: true
    Error:
      description: An error object
      properties:
        code:
          description: A technical error code
          type: string
        message:
          description: A human readable error message
          type: string
      required:
        - code
        - message
      type: object
  securitySchemes:
    jwt:
      bearerFormat: JWT
      scheme: bearer
      type: http
  responses:
    NotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The specified resource was not found
    Unauthorized:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Unauthorized
security:
  - jwt: []
externalDocs:
  description: Find more info here
  url: https://example.com
