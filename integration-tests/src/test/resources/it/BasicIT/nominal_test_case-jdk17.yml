---
openapi: 3.0.3
info:
  title: Basic integration test
  version: 23.5.2
servers:
  - url: ""
tags:
  - name: UserController
    description: User related apis
paths:
  /api/user/records:
    get:
      tags:
        - UserController
      operationId: getRecords
      description: List all the records
      responses:
        200:
          description: all the available records
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecordDto'
  /api/user/update:
    put:
      tags:
        - UserController
      operationId: updateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
  /api/user/user-dtos:
    get:
      tags:
        - UserController
      operationId: getUserDtos
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDto'
components:
  schemas:
    Authority:
      type: string
      enum:
        - ACCESS_APP
        - READ_USER
        - UPDATE_USER
    RecordDto:
      description: Dto used for a good reason.
      required:
        - login
      type: object
      properties:
        counter:
          description: a counter
          type: integer
          format: int32
        listSubRecords:
          description: a list of plenty of sub records
          type: array
          items:
            $ref: '#/components/schemas/SubRecordDto'
          uniqueItems: true
    SubRecordDto:
      description: A record in a record
      type: object
      properties:
        nbSomething:
          description: number of something
          type: integer
          format: int32
        code:
          type: string
    UserDto:
      description: "A DTO representing a user, with his authorities."
      type: object
      properties:
        id:
          type: integer
          format: int64
        login:
          type: string
          minLength: 1
          maxLength: 50
        firstName:
          type: string
          minLength: 0
          maxLength: 50
        lastName:
          type: string
          minLength: 0
          maxLength: 50
        email:
          type: string
          minLength: 5
          maxLength: 254
        imageUrl:
          type: string
          minLength: 0
          maxLength: 256
        activated:
          type: boolean
        langKey:
          type: string
          minLength: 2
          maxLength: 10
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        authorities:
          type: array
          items:
            $ref: '#/components/schemas/Authority'
          uniqueItems: true
